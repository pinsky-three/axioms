// Skip whitespace and comments automatically
WHITESPACE = _{ " " | "\t" }
COMMENT    = _{ "//" ~ (!"\n" ~ ANY)* ~ "\n" }

// Top-level rule: an expression
expression = { sum }

// Sum: handles addition and subtraction between terms.
sum = { product ~ (("+" | "-") ~ product)* }

// Product: handles both explicit ("*") and implicit multiplication.
product = { power ~ (("*"? ~ power))* }

// Power: handles exponentiation (right-associative).
power = { primary ~ ("^" ~ power)? }

// Primary: a float, an integer, a variable, or a parenthesized expression.
primary = { float | int | variable | "(" ~ expression ~ ")" }

// Floating-point numbers (f64): either with digits before or after the decimal point.
float = @{ "-"? ~ (ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ | "." ~ ASCII_DIGIT+) }

// Integers (i64): a sequence of digits, possibly prefixed with a minus.
int = @{ "-"? ~ ASCII_DIGIT+ }

// Variables: start with a letter or underscore followed by alphanumerics or underscores.
variable = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }
